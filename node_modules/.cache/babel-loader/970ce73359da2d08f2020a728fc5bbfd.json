{"remainingRequest":"C:\\xampp\\htdocs\\IHM\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\IHM\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\xampp\\htdocs\\IHM\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\xampp\\htdocs\\IHM\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\xampp\\htdocs\\IHM\\node_modules\\@fawmi\\vue-google-maps\\src\\components\\cluster.vue?vue&type=template&id=b97a24d2","dependencies":[{"path":"C:\\xampp\\htdocs\\IHM\\node_modules\\@fawmi\\vue-google-maps\\src\\components\\cluster.vue","mtime":1639666890615},{"path":"C:\\xampp\\htdocs\\IHM\\babel.config.js","mtime":1639666655167},{"path":"C:\\xampp\\htdocs\\IHM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639666687566},{"path":"C:\\xampp\\htdocs\\IHM\\node_modules\\babel-loader\\lib\\index.js","mtime":1639666688625},{"path":"C:\\xampp\\htdocs\\IHM\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1639666689323},{"path":"C:\\xampp\\htdocs\\IHM\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1639666687566},{"path":"C:\\xampp\\htdocs\\IHM\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1639666688819}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVuZGVyU2xvdCBhcyBfcmVuZGVyU2xvdCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBudWxsLCBbX3JlbmRlclNsb3QoX2N0eC4kc2xvdHMsICJkZWZhdWx0IildKTsKfQ=="},{"version":3,"sources":["C:\\xampp\\htdocs\\IHM\\node_modules\\@fawmi\\vue-google-maps\\src\\components\\cluster.vue"],"names":[],"mappings":";;uBACE,mBAAA,CAEM,KAFN,EAEM,IAFN,EAEM,CADJ,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,CACI,CAFN,C","sourcesContent":["<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n<script>\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\nimport buildComponent from './build-component.js'\n\nconst props = {\n  maxZoom: {\n    type: Number,\n    twoWay: false,\n  },\n  batchSizeIE: {\n    type: Number,\n    twoWay: false,\n  },\n  calculator: {\n    type: Function,\n    twoWay: false,\n  },\n  enableRetinaIcons: {\n    type: Boolean,\n    twoWay: false,\n  },\n  gridSize: {\n    type: Number,\n    twoWay: false,\n  },\n  ignoreHidden: {\n    type: Boolean,\n    twoWay: false,\n  },\n  imageExtension: {\n    type: String,\n    twoWay: false,\n  },\n  imagePath: {\n    type: String,\n    twoWay: false,\n  },\n  imageSizes: {\n    type: Array,\n    twoWay: false,\n  },\n  minimumClusterSize: {\n    type: Number,\n    twoWay: false,\n  },\n  styles: {\n    type: Array,\n    twoWay: false,\n  },\n  zoomOnClick: {\n    type: Boolean,\n    twoWay: false,\n  },\n}\n\nconst events = [\n  'click',\n  'rightclick',\n  'dblclick',\n  'drag',\n  'dragstart',\n  'dragend',\n  'mouseup',\n  'mousedown',\n  'mouseover',\n  'mouseout',\n]\n\nexport default buildComponent({\n  mappedProps: props,\n  events,\n  name: 'cluster',\n  ctr: () => {\n    if (typeof MarkerClusterer === 'undefined') {\n      const errorMessage = 'MarkerClusterer is not installed!';\n      console.error(errorMessage);\n      throw new Error(errorMessage)\n    }\n    return MarkerClusterer\n  },\n  ctrArgs: ({ map, ...otherOptions }) => [map, [], otherOptions],\n  afterCreate(inst) {\n    const reinsertMarkers = () => {\n      const oldMarkers = inst.getMarkers()\n      inst.clearMarkers()\n      inst.addMarkers(oldMarkers)\n    }\n    for (let prop in props) {\n      if (props[prop].twoWay) {\n        this.$on(prop.toLowerCase() + '_changed', reinsertMarkers)\n      }\n    }\n  },\n  updated() {\n    if (this.$clusterObject) {\n      this.$clusterObject.repaint()\n    }\n  },\n  beforeUnmount() {\n    /* Performance optimization when destroying a large number of markers */\n    if (this.$children && this.$children.length) {\n      this.$children.forEach((marker) => {\n        if (marker.$clusterObject === this.$clusterObject) {\n          marker.$clusterObject = null\n        }\n      })\n    }\n\n\n    if (this.$clusterObject) {\n      this.$clusterObject.clearMarkers()\n    }\n  },\n})\n</script>\n"],"sourceRoot":""}]}